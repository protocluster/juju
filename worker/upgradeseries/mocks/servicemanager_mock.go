// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/service (interfaces: SystemdServiceManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	common "github.com/juju/juju/service/common"
	version "github.com/juju/version"
	reflect "reflect"
)

// MockSystemdServiceManager is a mock of SystemdServiceManager interface
type MockSystemdServiceManager struct {
	ctrl     *gomock.Controller
	recorder *MockSystemdServiceManagerMockRecorder
}

// MockSystemdServiceManagerMockRecorder is the mock recorder for MockSystemdServiceManager
type MockSystemdServiceManagerMockRecorder struct {
	mock *MockSystemdServiceManager
}

// NewMockSystemdServiceManager creates a new mock instance
func NewMockSystemdServiceManager(ctrl *gomock.Controller) *MockSystemdServiceManager {
	mock := &MockSystemdServiceManager{ctrl: ctrl}
	mock.recorder = &MockSystemdServiceManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSystemdServiceManager) EXPECT() *MockSystemdServiceManagerMockRecorder {
	return m.recorder
}

// CopyAgentBinary mocks base method
func (m *MockSystemdServiceManager) CopyAgentBinary(arg0 string, arg1 []string, arg2, arg3, arg4 string, arg5 version.Number) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CopyAgentBinary", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(error)
	return ret0
}

// CopyAgentBinary indicates an expected call of CopyAgentBinary
func (mr *MockSystemdServiceManagerMockRecorder) CopyAgentBinary(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CopyAgentBinary", reflect.TypeOf((*MockSystemdServiceManager)(nil).CopyAgentBinary), arg0, arg1, arg2, arg3, arg4, arg5)
}

// CreateAgentConf mocks base method
func (m *MockSystemdServiceManager) CreateAgentConf(arg0, arg1 string) (common.Conf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentConf", arg0, arg1)
	ret0, _ := ret[0].(common.Conf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentConf indicates an expected call of CreateAgentConf
func (mr *MockSystemdServiceManagerMockRecorder) CreateAgentConf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentConf", reflect.TypeOf((*MockSystemdServiceManager)(nil).CreateAgentConf), arg0, arg1)
}

// FindAgents mocks base method
func (m *MockSystemdServiceManager) FindAgents(arg0 string) (string, []string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAgents", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].([]string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// FindAgents indicates an expected call of FindAgents
func (mr *MockSystemdServiceManagerMockRecorder) FindAgents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAgents", reflect.TypeOf((*MockSystemdServiceManager)(nil).FindAgents), arg0)
}

// StartAllAgents mocks base method
func (m *MockSystemdServiceManager) StartAllAgents(arg0 string, arg1 []string, arg2 string) (string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartAllAgents", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// StartAllAgents indicates an expected call of StartAllAgents
func (mr *MockSystemdServiceManagerMockRecorder) StartAllAgents(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartAllAgents", reflect.TypeOf((*MockSystemdServiceManager)(nil).StartAllAgents), arg0, arg1, arg2)
}

// WriteServiceFiles mocks base method
func (m *MockSystemdServiceManager) WriteServiceFiles() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteServiceFiles")
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteServiceFiles indicates an expected call of WriteServiceFiles
func (mr *MockSystemdServiceManagerMockRecorder) WriteServiceFiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteServiceFiles", reflect.TypeOf((*MockSystemdServiceManager)(nil).WriteServiceFiles))
}

// WriteSystemdAgents mocks base method
func (m *MockSystemdServiceManager) WriteSystemdAgents(arg0 string, arg1 []string, arg2, arg3 string) ([]string, []string, []string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteSystemdAgents", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].([]string)
	ret2, _ := ret[2].([]string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// WriteSystemdAgents indicates an expected call of WriteSystemdAgents
func (mr *MockSystemdServiceManagerMockRecorder) WriteSystemdAgents(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteSystemdAgents", reflect.TypeOf((*MockSystemdServiceManager)(nil).WriteSystemdAgents), arg0, arg1, arg2, arg3)
}
